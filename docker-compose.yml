version: '3.7'
services:

  cartapi:
    container_name: cartapi
    build:
      context: .
      args:
        - API_DIR=/tmp/src/cartapi
    volumes:
      - "${HOME}/.m2:/root/.m2"
    env_file:
      - .env.docker
    ports:
      - '8180:8080'
    networks:
      - common
    depends_on:
      - elasticsearch
    environment:
      SPRING_APPLICATION_JSON: '{
              "elasticsearch.service.url": "elasticsearch:9200",
              "elasticsearch.service.local.environment": "true",
              "elasticsearch.service.user": "elastic",
              "elasticsearch.service.password": "changeme"
            }'

  messageapi:
    container_name: messageapi
    build:
      context: .
      args:
        - API_DIR=/tmp/src/messageapi
    env_file:
      - .env.docker
    environment:
      - SPRING_MAIL_HOST=mailhog
      - SPRING_MAIL_PORT=1025
      - SPRING_MAIL_USERNAME=""
      - SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH=false
      - SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE=false
    volumes:
      - "${HOME}/.m2:/root/.m2"
    ports:
      - '8181:8080'
    networks:
      - common
    depends_on:
      - elasticsearch

  mockproductmanagement:
    container_name: mockproductmanagement
    build:
      context: .
      args:
        - API_DIR=/tmp/src/mockproductmanagement
    volumes:
      - "${HOME}/.m2:/root/.m2"
    env_file:
      - .env.docker
    ports:
      - '8182:8080'
    networks:
      - common
    depends_on:
      - elasticsearch
    environment:
      SPRING_APPLICATION_JSON: '{
              "elasticsearch.service.url": "elasticsearch:9200",
              "elasticsearch.service.local.environment": "true",
              "elasticsearch.service.user": "elastic",
              "elasticsearch.service.password": "changeme"
            }'

  orderapi:
    container_name: orderapi
    build:
      context: .
      args:
        - API_DIR=/tmp/src/orderapi
    volumes:
      - "${HOME}/.m2:/root/.m2"
    env_file:
      - .env.docker
    ports:
      - '8183:8080'
    networks:
      - common
    depends_on:
      - elasticsearch
    environment:
      SPRING_APPLICATION_JSON: '{
              "elasticsearch.service.url": "elasticsearch:9200",
              "elasticsearch.service.local.environment": "true",
              "elasticsearch.service.user": "elastic",
              "elasticsearch.service.password": "changeme"
            }'

  paymentapi:
    container_name: paymentapi
    build:
      context: .
      args:
        - API_DIR=/tmp/src/paymentapi
    volumes:
      - "${HOME}/.m2:/root/.m2"
    env_file:
      - .env.docker
    ports:
      - '8184:8080'
    networks:
      - common
    depends_on:
      - elasticsearch
    environment:
      SPRING_APPLICATION_JSON: '{
              "elasticsearch.service.url": "elasticsearch:9200",
              "elasticsearch.service.local.environment": "true",
              "elasticsearch.service.user": "elastic",
              "elasticsearch.service.password": "changeme"
            }'

  priceapi:
    container_name: priceapi
    build:
      context: .
      args:
        - API_DIR=/tmp/src/priceapi
    volumes:
      - "${HOME}/.m2:/root/.m2"
      - "./infra/priceapi/src/main/resources/application.properties:/tmp/src/priceapi/src/main/resources/application.properties"
    env_file:
      - .env.docker
    ports:
      - '8185:8080'
    networks:
      - common
    depends_on:
      - elasticsearch
    environment:
      SPRING_APPLICATION_JSON: '{
              "elasticsearch.service.url": "elasticsearch:9200",
              "elasticsearch.service.local.environment": "true",
              "elasticsearch.service.user": "elastic",
              "elasticsearch.service.password": "changeme"
            }'

  productapi:
    container_name: productapi
    build:
      context: .
      args:
        - API_DIR=/tmp/src/productapi
    volumes:
      - "${HOME}/.m2:/root/.m2"
      - "./infra/productapi/src/main/resources/application.properties:/tmp/src/productapi/src/main/resources/application.properties"
    env_file:
      - .env.docker
    ports:
      - '8186:8080'
    networks:
      - common
    depends_on:
      - elasticsearch
    environment:
      SPRING_APPLICATION_JSON: '{
              "elasticsearch.service.url": "elasticsearch:9200",
              "elasticsearch.service.local.environment": "true",
              "elasticsearch.service.user": "elastic",
              "elasticsearch.service.password": "changeme"
            }'

  productmapping:
    container_name: productmapping
    build:
      context: .
      args:
        - API_DIR=/tmp/src/productmapping
    volumes:
      - "${HOME}/.m2:/root/.m2"
      - "./infra/productmapping/src/main/resources/application.properties:/tmp/src/productmapping/src/main/resources/application.properties"
    env_file:
      - .env.docker
    ports:
      - '8187:8080'
    networks:
      - common
    depends_on:
      - elasticsearch
    environment:
      SPRING_APPLICATION_JSON: '{
              "elasticsearch.service.url": "elasticsearch:9200",
              "elasticsearch.service.local.environment": "true",
              "elasticsearch.service.user": "elastic",
              "elasticsearch.service.password": "changeme"
            }'

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.1
    container_name: elasticsearch
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xmx2g -Xms2g"
      - discovery.type=single-node
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: [ "CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1" ]
      interval: 30s
      timeout: 30s
      retries: 3
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_reservation: 2048MB
    networks:
      - common

#  kibana:
#    image: docker.elastic.co/kibana/kibana:7.12.1
#    container_name: kibana
#    environment:
#      - ELASTICSEARCH_URL=elasticsearch:9200
#    ports:
#      - "5601:5601"
#    networks:
#      - common

  mailhog:
    image: mailhog/mailhog
    logging:
      driver: 'none'  # disable saving logs
    ports:
      - '1025:1025' # smtp server
      - '8025:8025' # web ui
    networks:
      - common

volumes:
  esdata1:
    driver: local

networks:
  common: