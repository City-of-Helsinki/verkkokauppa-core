version: '3.7'
services:

  cartapi:
    container_name: cartapi
    build:
      context: .
      args:
        - API_DIR=/tmp/src/cartapi
    environment:
      - server.port=8080
      - ELASTICSEARCH_SERVICE_LOCAL_ENVIRONMENT=true
      - ELASTICSEARCH_SERVICE_URL=elasticsearch:9200
      - ELASTICSEARCH_SERVICE_USER=elastic
      - ELASTICSEARCH_SERVICE_PASSWORD=changeme
#    volumes:
#      - /c/Users/severik/.m2:/root/.m2
    ports:
      - '8180:8080'
    networks:
      - common
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s
    depends_on:
      - elasticsearch

  messageapi:
    container_name: messageapi
    build:
      context: .
      args:
        - API_DIR=/tmp/src/messageapi
    environment:
      - server.port=8080
      - ELASTICSEARCH_SERVICE_LOCAL_ENVIRONMENT=true
      - ELASTICSEARCH_SERVICE_URL=elasticsearch:9200
      - ELASTICSEARCH_SERVICE_USER=elastic
      - ELASTICSEARCH_SERVICE_PASSWORD=changeme
#    volumes:
#      - /c/Users/severik/.m2:/root/.m2
    ports:
      - '8181:8080'
    networks:
      - common
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s
    depends_on:
      - elasticsearch

  mockproductmanagement:
    container_name: mockproductmanagement
    build:
      context: .
      args:
        - API_DIR=/tmp/src/mockproductmanagement
    environment:
      - server.port=8080
      - ELASTICSEARCH_SERVICE_LOCAL_ENVIRONMENT=true
      - ELASTICSEARCH_SERVICE_URL=elasticsearch:9200
      - ELASTICSEARCH_SERVICE_USER=elastic
      - ELASTICSEARCH_SERVICE_PASSWORD=changeme
#    volumes:
#      - /c/Users/severik/.m2:/root/.m2
    ports:
      - '8182:8080'
    networks:
      - common
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s
    depends_on:
      - elasticsearch

  orderapi:
    container_name: orderapi
    build:
      context: .
      args:
        - API_DIR=/tmp/src/orderapi
    environment:
      - server.port=8080
      - ELASTICSEARCH_SERVICE_LOCAL_ENVIRONMENT=true
      - ELASTICSEARCH_SERVICE_URL=elasticsearch:9200
      - ELASTICSEARCH_SERVICE_USER=elastic
      - ELASTICSEARCH_SERVICE_PASSWORD=changeme
#    volumes:
#      - /c/Users/severik/.m2:/root/.m2
    ports:
      - '8183:8080'
    networks:
      - common
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s
    depends_on:
      - elasticsearch

  paymentapi:
    container_name: paymentapi
    build:
      context: .
      args:
        - API_DIR=/tmp/src/paymentapi
    environment:
      - server.port=8080
      - ELASTICSEARCH_SERVICE_LOCAL_ENVIRONMENT=true
      - ELASTICSEARCH_SERVICE_URL=elasticsearch:9200
      - ELASTICSEARCH_SERVICE_USER=elastic
      - ELASTICSEARCH_SERVICE_PASSWORD=changeme
#    volumes:
#      - /c/Users/severik/.m2:/root/.m2
    ports:
      - '8184:8080'
    networks:
      - common
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s
    depends_on:
      - elasticsearch

  priceapi:
    container_name: priceapi
    build:
      context: .
      args:
        - API_DIR=/tmp/src/priceapi
    environment:
      - server.port=8080
      - ELASTICSEARCH_SERVICE_LOCAL_ENVIRONMENT=true
      - ELASTICSEARCH_SERVICE_URL=elasticsearch:9200
      - ELASTICSEARCH_SERVICE_USER=elastic
      - ELASTICSEARCH_SERVICE_PASSWORD=changeme
#    volumes:
#      - /c/Users/severik/.m2:/root/.m2
    ports:
      - '8185:8080'
    networks:
      - common
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s
    depends_on:
      - elasticsearch

  productapi:
    container_name: productapi
    build:
      context: .
      args:
        - API_DIR=/tmp/src/productapi
    environment:
      - server.port=8080
      - ELASTICSEARCH_SERVICE_LOCAL_ENVIRONMENT=true
      - ELASTICSEARCH_SERVICE_URL=elasticsearch:9200
      - ELASTICSEARCH_SERVICE_USER=elastic
      - ELASTICSEARCH_SERVICE_PASSWORD=changeme
#    volumes:
#      - /c/Users/severik/.m2:/root/.m2
    ports:
      - '8186:8080'
    networks:
      - common
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s
    depends_on:
      - elasticsearch

  productmapping:
    container_name: productmapping
    build:
      context: .
      args:
        - API_DIR=/tmp/src/productmapping
    environment:
      - server.port=8080
      - ELASTICSEARCH_SERVICE_LOCAL_ENVIRONMENT=true
      - ELASTICSEARCH_SERVICE_URL=elasticsearch:9200
      - ELASTICSEARCH_SERVICE_USER=elastic
      - ELASTICSEARCH_SERVICE_PASSWORD=changeme
#    volumes:
#      - /c/Users/severik/.m2:/root/.m2
    ports:
      - '8187:8080'
    networks:
      - common
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s
    depends_on:
      - elasticsearch

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.1
    container_name: elasticsearch
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - ES_JAVA_OPTS = "-Xmx2048m -Xms2048m"
      - discovery.type=single-node
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - common

  kibana:
    image: docker.elastic.co/kibana/kibana:7.12.1
    container_name: kibana
    environment:
      - ELASTICSEARCH_URL=elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - common

volumes:
  esdata1:
    driver: local

networks:
  common: